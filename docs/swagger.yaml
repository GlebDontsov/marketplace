definitions:
  dto.AdvertisementResponse:
    properties:
      author_login:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      is_owner:
        type: boolean
      price:
        type: number
      title:
        type: string
    type: object
  dto.CreateAdRequest:
    properties:
      description:
        maxLength: 1000
        minLength: 10
        type: string
      image_url:
        type: string
      price:
        type: number
      title:
        maxLength: 100
        minLength: 5
        type: string
    required:
    - description
    - image_url
    - price
    - title
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      login:
        maxLength: 20
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
    required:
    - login
    - password
    type: object
  dto.UserResponse:
    properties:
      id:
        type: integer
      login:
        type: string
    type: object
info:
  contact: {}
paths:
  /ads:
    get:
      consumes:
      - application/json
      description: Get list of advertisements with filters and pagination
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - default: created_at
        description: Sort field (created_at or price)
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      - description: Minimum price
        in: query
        name: min_price
        type: number
      - description: Maximum price
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AdvertisementResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get advertisements
      tags:
      - advertisement
    post:
      consumes:
      - application/json
      description: Create new advertisement (only for authorized users)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Advertisement data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAdRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.AdvertisementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create new advertisement
      tags:
      - advertisement
  /login:
    post:
      consumes:
      - application/json
      description: Login user with credentials
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with login and password
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
